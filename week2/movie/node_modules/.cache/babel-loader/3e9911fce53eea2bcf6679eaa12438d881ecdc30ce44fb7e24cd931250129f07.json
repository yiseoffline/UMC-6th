{"ast":null,"code":"var _jsxFileName = \"/Users/yiseo/Documents/UMC/week2/movie/src/movie/Movie.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { movieApi } from \"../movieApi.js\"; // movieApi.js 파일에서 movieApi 객체를 가져옴\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Movie = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    setMovies(movieApi.results); // movieApi 객체에서 results 배열을 직접 사용하여 영화 데이터 설정\n  }, []);\n  console.log(movies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"Movie\",\n    children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w200/${movie.poster_path}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: movie.overview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)]\n    }, movie.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(Movie, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = Movie;\nexport default Movie;\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","useState","useEffect","movieApi","jsxDEV","_jsxDEV","Movie","_s","movies","setMovies","results","console","log","id","children","map","movie","src","poster_path","fileName","_jsxFileName","lineNumber","columnNumber","title","overview","_c","$RefreshReg$"],"sources":["/Users/yiseo/Documents/UMC/week2/movie/src/movie/Movie.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { movieApi } from \"../movieApi.js\"; // movieApi.js 파일에서 movieApi 객체를 가져옴\n\nconst Movie = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    setMovies(movieApi.results); // movieApi 객체에서 results 배열을 직접 사용하여 영화 데이터 설정\n  }, []);\n\n  console.log(movies);\n\n  return (\n    <div id=\"Movie\">\n      {movies.map((movie) => (\n        <div key={movie.id}>\n          <div>\n            <img src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`} />\n            <h2>{movie.title}</h2>\n          </div>\n          <p>{movie.overview}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Movie;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdO,SAAS,CAACN,QAAQ,CAACO,OAAO,CAAC,CAAC,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAENC,OAAO,CAACC,GAAG,CAACJ,MAAM,CAAC;EAEnB,oBACEH,OAAA;IAAKQ,EAAE,EAAC,OAAO;IAAAC,QAAA,EACZN,MAAM,CAACO,GAAG,CAAEC,KAAK,iBAChBX,OAAA;MAAAS,QAAA,gBACET,OAAA;QAAAS,QAAA,gBACET,OAAA;UAAKY,GAAG,EAAG,mCAAkCD,KAAK,CAACE,WAAY;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACpEjB,OAAA;UAAAS,QAAA,EAAKE,KAAK,CAACO;QAAK;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC,eACNjB,OAAA;QAAAS,QAAA,EAAIE,KAAK,CAACQ;MAAQ;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GALfN,KAAK,CAACH,EAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMb,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACf,EAAA,CAtBID,KAAK;AAAAmB,EAAA,GAALnB,KAAK;AAwBX,eAAeA,KAAK;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}